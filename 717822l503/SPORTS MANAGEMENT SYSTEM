package util;import java.sql.DriverManager;
import java.sql.Connection;
import java.sql.Statement;
import java.sql.SQLException;



public class DBConnection {
    static Connection connection;

    public static Connection createDBConnection() {
        try {
            // Load the Oracle JDBC driver
        	final String DBUrl="jdbc:oracle:thin:@localhost:1521:XE";
        	final String USER="717822l501@kce.ac.in";
        	final String PASS="@Akilesh2003";
            Class.forName("oracle.jdbc.driver.OracleDriver");

            // Establish the connection
            connection = DriverManager.getConnection(DBUrl,USER,PASS);
        } catch (ClassNotFoundException e) {
            System.out.println("Oracle JDBC driver not found");
            e.printStackTrace();
        } catch (SQLException e) {
            System.out.println("Error establishing the database connection");
            e.printStackTrace();
        }
		return connection;
    }

    public Connection getConnection() {
        return connection;
    }

    public void closeConnection() {
        try {
            if (connection != null && !connection.isClosed()) {
                connection.close();
            }
        } catch (SQLException e) {
            System.out.println("Error closing the database connection");
            e.printStackTrace();
        }
    }
}
package bean;
public class HotelRooms {
    private int totalRooms;
    private int occupiedRooms;
    private int freeRooms;

    public int getTotalRooms() {
        return totalRooms;
    }

    public void setTotalRooms(int totalRooms) {
        this.totalRooms = totalRooms;
    }

    public int getOccupiedRooms() {
        return occupiedRooms;
    }

    public void setOccupiedRooms(int occupiedRooms) {
        this.occupiedRooms = occupiedRooms;
    }

    public int getFreeRooms() {
        return freeRooms;
    }

    public void setFreeRooms(int freeRooms) {
        this.freeRooms = freeRooms;
    }
}
package dao;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

import util.DBConnection;

public class HotelDAO implements HotelDAOInterface {
     Connection connection;

   

    @Override
    public boolean isRoomAvailable() {
        boolean roomAvailable = false;

        try {
            // Execute SQL query to check room availability
        	connection = DBConnection.createDBConnection();
            String query = "SELECT COUNT(*) FROM HotelRooms WHERE freeRooms >0";
            PreparedStatement statement = connection.prepareStatement(query);
            ResultSet resultSet = statement.executeQuery();

            // Check if any available rooms found
            if (resultSet.next()) {
                int count = resultSet.getInt(1);
                roomAvailable = (count > 0);
            }

            // Close result set and statement
            resultSet.close();
            statement.close();
        } catch (SQLException e) {
            e.printStackTrace();
        }

        return roomAvailable;
    }

    // Close the database connection
    public void closeConnection() {
        try {
            if (connection != null && !connection.isClosed()) {
                connection.close();
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }
}
package service;
import dao.HotelDAO;
import dao.HotelDAOInterface;
public class Main {
public static void main(String[]args)
{
	HotelDAO dao=new HotelDAO();
	do
	{
		System.out.println("****WELCOME****");
		System.out.println("Checking For Sports...");
		dao.isRoomAvailable();
		System.out.println("****Thank You****");
	}while(true);
}
}
